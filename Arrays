#include<iostream>
using namespace std;
int* append(int* arrayA, int sizeA, int* arrayB, int sizeB);
int* merge(int* arrayA, int sizeA, int* arrayB, int sizeB);
void print(int* array, int size, const char* label);
int main(){
 int arrayA[] = { 11,33,55,77,99 }; // use other values for more tests
 int arrayB[] = { 22,44,66,88 };
 print(arrayA, 5, "Sorted array A: ");
 print(arrayB, 4, "Sorted array B: ");
 int* arrayC = append(arrayA, 5, arrayB, 4); // arrayC points to the appended array
 // 11,33,55,77,99,22,44,66,88
 print(arrayC, 9, "Append B to A: ");
 int* arrayD = merge(arrayA, 5, arrayB, 4); // 11 22 33 44 55 66 77 88 99
 print(arrayD, 9, "Merge A to B: ");
 delete[] arrayC;
 delete[] arrayD;
#ifdef _WIN32 // _WIN32 is used by Visual C++
#if (_MSC_VER <= 1916) // check if it Visual Studio 2017 or earlier
 system("pause");
#endif
#endif
 return 0;
}
int* append(int* arrayA, int sizeA, int* arrayB, int sizeB)
{
 int* result = new int[sizeA + sizeB];
 for (int i = 0; i < sizeA; i++)
 {
 result[i] = arrayA[i];
 }
 for (int j = 0; j < sizeB; j++)
 {
 result[sizeA+j] = arrayB[j];
 }
 return result;
}
int* merge(int* arrayA, int sizeA, int* arrayB, int sizeB)
{
 int* result = new int[sizeA + sizeB];
 int i = 0, j = 0, k = 0;
 while (i < sizeA && j < sizeB)
 {
   if (arrayA[i] < arrayB[j])
   {
     result[k++] = arrayA[i++];
   } 
   else
   {
     result[k++] = arrayB[j++];
   }
 }
  while (i < sizeA)
  {
    result[k++] = arrayA[i++];
  }
  while (j < sizeB)
  {
    result[k++] = arrayB[j++];
  }
  return result;
}
void print(int* array, int size, const char* label)
{
  cout << label;
  for (int i = 0; i < size; i++)
    {
      cout << array[i] << " ";
    }
  cout << endl;
}
